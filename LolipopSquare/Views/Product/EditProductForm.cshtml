@using LolipopSquare.Models.ViewModels
@model ProductImageVM
@{
    ViewData["Title"] = "EditProductForm";
}

<h1>Edit Product</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateProduct" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" data-val-regex-pattern="^\d+(\,)\d{2}$" data-val-regex="Price must contains only digits and comma as a separator" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
            <div class="form-check form-switch">
                @if (Model.Availability == true)
                {   
                    <input class="form-check-input" asp-for="Availability" type="checkbox" id="Availability">
                    <label class="form-check-label" for="Availability">Available</label>
                }
                else
                {
                    <input class="form-check-input" asp-for="Availability" type="checkbox" id="Availability">
                    <label class="form-check-label" for="Availability">Unavailable</label>
                }

            </div>
           </div>
            <dl>
                <dt>Images</dt>
                <dd>
                    @foreach (var item in @Model.Images)
                    {
                        var imageBase64Data = Convert.ToBase64String(item.ImageData);
                        <img src="data:image/jpg;base64, @imageBase64Data" width="100px" height="150px" />
                        <div>
                        <button type="button" class="btn btn-danger" onclick="DeleteImg(@item.Id)">Delete</button>
                        </div>
                    }
                </dd>
            </dl>
            <div class="form-group">
                <label asp-for="NewImages" class="control-label"></label>
                <input asp-for="NewImages" type="file" multiple class="form-control" />
                <span asp-validation-for="NewImages" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
<script>
    function DeleteImg(id){
        fetch('https://localhost:7243/Product/DeleteImg?id=' + id,{
            method: 'POST',
        })
        .then(res => res.text())
        .then(res => window.location = window.location.href)
    }

</script>
}
