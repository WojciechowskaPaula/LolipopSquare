@using LolipopSquare.Models.ViewModels
@model ProductImageVM
@{
    ViewData["Title"] = "EditProductForm";
}

<h1>Edit Product</h1>
<hr />


<form asp-action="UpdateProduct" method="post" enctype="multipart/form-data" class="productCard">
    <div class="row formMargin">
        <div class="col-5 float-start">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" data-val-regex-pattern="^\d+(\,)\d{2}$" data-val-regex="Price must contains only digits and comma as a separator" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(x=>x.CategoryList, htmlAttributes: new { @class = "control-label form-group"} )
                <div>
                    @Html.DropDownListFor(x=>x.Category.Id, new SelectList(Model.CategoryList.Select(y=> new {Text = y.Id, Value = y.Name}), "Text", "Value"), htmlAttributes: new { @class= "form-select", id="CategoryName"})
                </div>
            </div>
            <div class="form-group">
                <div class="form-check form-switch">
                    @if (Model.Availability == true)
                    {
                        <input class="form-check-input" asp-for="Availability" type="checkbox" id="Availability">
                        <label class="form-check-label" for="Availability">Available</label>
                    }
                    else
                    {
                        <input class="form-check-input" asp-for="Availability" type="checkbox" id="Availability">
                        <label class="form-check-label" for="Availability">Unavailable</label>
                    }

                </div>
            </div>
        </div>
    </div>
    <div class="row formMargin">

                    @foreach (var item in @Model.Images)
                    {
                        var imageBase64Data = Convert.ToBase64String(item.ImageData);
                        <div class="col-6 imagesInEdit">
                        <img class="img-fluid" src="data:image/jpg;base64, @imageBase64Data" alt="sweets" />
                        <div class="text-center">
                            <button type="button" class="btn btn-danger" onclick="DeleteImg(@item.Id)">Delete</button>
                        </div>
                        </div>
                        <br />
                    }
                
            
                    <div class="row">
                           <div class="col-5 form-group">
                <label asp-for="NewImages" class="control-label"></label>
                <input asp-for="NewImages" type="file" multiple class="form-control" />
                <span asp-validation-for="NewImages" class="text-danger"></span>
                 <div class="form-group buttonsEditAndExit">
                <input type="submit" value="Save" class="btn btn-primary" />
               <a class="btn btn-dark" asp-action="Index">Back to List</a>
            </div>
            </div>

                    </div>
         

            <br />
           
    </div>

</form>





@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
<script>
    function DeleteImg(id){
        fetch('https://localhost:7243/Product/DeleteImg?id=' + id,{
            method: 'POST',
        })
        .then(res => res.text())
        .then(res => window.location = window.location.href)
    }

</script>
}
